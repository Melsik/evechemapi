# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class TowerInfo(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, type: int=None, fuel_bay: int=None, stront_bay: int=None, name: str=None, storage_mult: float=None, cpu: float=None, powergrid: float=None, fuel_usage: int=None, stront_usage: int=None, fuel_type: int=None):
        """
        TowerInfo - a model defined in Swagger

        :param type: The type of this TowerInfo.
        :type type: int
        :param fuel_bay: The fuel_bay of this TowerInfo.
        :type fuel_bay: int
        :param stront_bay: The stront_bay of this TowerInfo.
        :type stront_bay: int
        :param name: The name of this TowerInfo.
        :type name: str
        :param storage_mult: The storage_mult of this TowerInfo.
        :type storage_mult: float
        :param cpu: The cpu of this TowerInfo.
        :type cpu: float
        :param powergrid: The powergrid of this TowerInfo.
        :type powergrid: float
        :param fuel_usage: The fuel_usage of this TowerInfo.
        :type fuel_usage: int
        :param stront_usage: The stront_usage of this TowerInfo.
        :type stront_usage: int
        :param fuel_type: The fuel_type of this TowerInfo.
        :type fuel_type: int
        """
        self.swagger_types = {
            'type': int,
            'fuel_bay': int,
            'stront_bay': int,
            'name': str,
            'storage_mult': float,
            'cpu': float,
            'powergrid': float,
            'fuel_usage': int,
            'stront_usage': int,
            'fuel_type': int
        }

        self.attribute_map = {
            'type': 'type',
            'fuel_bay': 'fuel_bay',
            'stront_bay': 'stront_bay',
            'name': 'name',
            'storage_mult': 'storage_mult',
            'cpu': 'cpu',
            'powergrid': 'powergrid',
            'fuel_usage': 'fuel_usage',
            'stront_usage': 'stront_usage',
            'fuel_type': 'fuel_type'
        }

        self._type = type
        self._fuel_bay = fuel_bay
        self._stront_bay = stront_bay
        self._name = name
        self._storage_mult = storage_mult
        self._cpu = cpu
        self._powergrid = powergrid
        self._fuel_usage = fuel_usage
        self._stront_usage = stront_usage
        self._fuel_type = fuel_type

    @classmethod
    def from_dict(cls, dikt) -> 'TowerInfo':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tower_info of this TowerInfo.
        :rtype: TowerInfo
        """
        return deserialize_model(dikt, cls)

    @property
    def type(self) -> int:
        """
        Gets the type of this TowerInfo.

        :return: The type of this TowerInfo.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type: int):
        """
        Sets the type of this TowerInfo.

        :param type: The type of this TowerInfo.
        :type type: int
        """

        self._type = type

    @property
    def fuel_bay(self) -> int:
        """
        Gets the fuel_bay of this TowerInfo.

        :return: The fuel_bay of this TowerInfo.
        :rtype: int
        """
        return self._fuel_bay

    @fuel_bay.setter
    def fuel_bay(self, fuel_bay: int):
        """
        Sets the fuel_bay of this TowerInfo.

        :param fuel_bay: The fuel_bay of this TowerInfo.
        :type fuel_bay: int
        """

        self._fuel_bay = fuel_bay

    @property
    def stront_bay(self) -> int:
        """
        Gets the stront_bay of this TowerInfo.

        :return: The stront_bay of this TowerInfo.
        :rtype: int
        """
        return self._stront_bay

    @stront_bay.setter
    def stront_bay(self, stront_bay: int):
        """
        Sets the stront_bay of this TowerInfo.

        :param stront_bay: The stront_bay of this TowerInfo.
        :type stront_bay: int
        """

        self._stront_bay = stront_bay

    @property
    def name(self) -> str:
        """
        Gets the name of this TowerInfo.

        :return: The name of this TowerInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """
        Sets the name of this TowerInfo.

        :param name: The name of this TowerInfo.
        :type name: str
        """

        self._name = name

    @property
    def storage_mult(self) -> float:
        """
        Gets the storage_mult of this TowerInfo.

        :return: The storage_mult of this TowerInfo.
        :rtype: float
        """
        return self._storage_mult

    @storage_mult.setter
    def storage_mult(self, storage_mult: float):
        """
        Sets the storage_mult of this TowerInfo.

        :param storage_mult: The storage_mult of this TowerInfo.
        :type storage_mult: float
        """

        self._storage_mult = storage_mult

    @property
    def cpu(self) -> float:
        """
        Gets the cpu of this TowerInfo.

        :return: The cpu of this TowerInfo.
        :rtype: float
        """
        return self._cpu

    @cpu.setter
    def cpu(self, cpu: float):
        """
        Sets the cpu of this TowerInfo.

        :param cpu: The cpu of this TowerInfo.
        :type cpu: float
        """

        self._cpu = cpu

    @property
    def powergrid(self) -> float:
        """
        Gets the powergrid of this TowerInfo.

        :return: The powergrid of this TowerInfo.
        :rtype: float
        """
        return self._powergrid

    @powergrid.setter
    def powergrid(self, powergrid: float):
        """
        Sets the powergrid of this TowerInfo.

        :param powergrid: The powergrid of this TowerInfo.
        :type powergrid: float
        """

        self._powergrid = powergrid

    @property
    def fuel_usage(self) -> int:
        """
        Gets the fuel_usage of this TowerInfo.

        :return: The fuel_usage of this TowerInfo.
        :rtype: int
        """
        return self._fuel_usage

    @fuel_usage.setter
    def fuel_usage(self, fuel_usage: int):
        """
        Sets the fuel_usage of this TowerInfo.

        :param fuel_usage: The fuel_usage of this TowerInfo.
        :type fuel_usage: int
        """

        self._fuel_usage = fuel_usage

    @property
    def stront_usage(self) -> int:
        """
        Gets the stront_usage of this TowerInfo.

        :return: The stront_usage of this TowerInfo.
        :rtype: int
        """
        return self._stront_usage

    @stront_usage.setter
    def stront_usage(self, stront_usage: int):
        """
        Sets the stront_usage of this TowerInfo.

        :param stront_usage: The stront_usage of this TowerInfo.
        :type stront_usage: int
        """

        self._stront_usage = stront_usage

    @property
    def fuel_type(self) -> int:
        """
        Gets the fuel_type of this TowerInfo.

        :return: The fuel_type of this TowerInfo.
        :rtype: int
        """
        return self._fuel_type

    @fuel_type.setter
    def fuel_type(self, fuel_type: int):
        """
        Sets the fuel_type of this TowerInfo.

        :param fuel_type: The fuel_type of this TowerInfo.
        :type fuel_type: int
        """

        self._fuel_type = fuel_type

